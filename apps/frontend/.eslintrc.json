// This configuration is JUST for REACT with VITE!
{
  // root: true,
  "extends": ["plugin:react/recommended", "plugin:react/jsx-runtime", "plugin:react-hooks/recommended"],
  "plugins": ["react", "tailwindcss"],
  "settings": {
    "react": { "version": "detect" },
    "import/extensions": [".js", ".jsx"]
  },
  "parserOptions": {
    "ecmaVersion": "latest", // Need to check how eslint merges configs
    "sourceType": "module", // Need to check how eslint merges configs
    "ecmaFeatures": { "jsx": true }
  },
  // without this override, html files will be considered as jsx:
  "overrides": [{ "files": ["*.html"], "parser": "html" }],
  "rules": {
    // #######################
    // Rule Set 1: react rules
    // #######################
    "react/prop-types": "off",
    "react/no-unescaped-entities": "off",
    "react/jsx-uses-react": "error",
    "react-hooks/exhaustive-deps": "warn",
    "react/jsx-uses-vars": "error", // DO NOT USE if no-unused-vars is marked off!
    "react/display-name": "error", // <--- check what this does
    "react/no-children-prop": "error", // <--- check what this does
    "react-hooks/rules-of-hooks": "error", // <--- check what this does
    // "react/react-in-jsx-scope": "error", // <--- Since React 18, this is no longer needed. "error" triggers the 'React' must be in scope when using JSX message.
    // "react/jsx-filename-extension": "error", // Yells at you if you add(?) an extension.

    // ########################
    // Rule Set 2: import rules
    // ########################
    "import/no-unresolved": [
      "error",
      {
        "commonjs": true,
        "caseSensitive": true,
        "caseSensitiveStrict": true,
        "ignore": ["@src", "@common", "@statistics"]
      } // ignore cannot be an empty array! ignore solved the issue of @src, @common being recognized as an error.
    ],
    "import/exports-last": "off", // <--- Turned "off" because it collides with Storybook.
    "import/extensions": ["error", "never"], // <--- vite doesn't need extensions

    // #############################
    // Rule Set 4: tailwindcss rules
    // #############################
    "tailwindcss/classnames-order": "error",
    "tailwindcss/enforces-negative-arbitrary-values": "error",
    "tailwindcss/enforces-shorthand": "error",
    "tailwindcss/no-arbitrary-value": "off", // <-- already off by default! prohibits using w-[5px]
    "tailwindcss/no-contradicting-classname": "error", // <--- avoids situations where you wrote p-2 & p-3 under the same className.
    "tailwindcss/no-custom-classname": [
      "warn",
      {
        // only allow classnames from Tailwind CSS and the values from the whitelist option, so put everything you created inside this white list!
        "whitelist": [
          "btn-love",
          "border-0.5",
          "border-1",
          "border-1.5",
          "border-b-1.5",
          "h-13",
          "h-15",
          "h-xs",
          "h-md",
          "h-3xl",
          "h-95/100",
          "w-15",
          "w-30",
          "w-34",
          "w-2xl",
          "w-5xl",
          "w-95/100",
          "min-w-14",
          "min-w-28",
          "min-h-20",
          "min-h-40",
          "min-h-sm",
          "min-h-lg",
          "max-w-28",
          "max-w-thirdish",
          "max-w-98/100",
          "max-h-lg",
          "max-h-sm",
          "max-h-90/100",
          "saturate-70",
          "translate-x-half",
          "translate-y-half",
          "font-tahoma",
          "animate-appear",
          "shadow-mini",
          "shadow-btn-love-active",
          "shadow-btn-love-focus",
          "bg-redLight",
          "bg-myRed",
          "border-myRed",
          "bg-gradient-radial-bottom",
          "font-MyFont-bold",
          "font-MyFont",
          "scale-80",
          "animate-appear-quick",
          "-top-19",
          "bg-darkGrayBlue",
          "invert-90",
          "text-darkGrayBlue",
          "contrast-90"
        ]
      }
    ]
  }
}
